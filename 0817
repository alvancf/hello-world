https://github.com/react-native-openharmony/rnoh/releases/tag/version-0.72.29

import React, { useRef, useEffect, useState } from 'react';
import { Animated, View, Button } from 'react-native';
import Svg, { Rect, Mask, Defs } from 'react-native-svg';

const AnimatedRect = Animated.createAnimatedComponent(Rect);

type AppProps = {};
const App = (props : AppProps) => {
const sizeAnim = useRef(new Animated.Value(0)).current;

const startAnimation = () => {
sizeAnim.setValue(0);
Animated.timing(sizeAnim, {
toValue: 50,
duration: 3000,
useNativeDriver: false,
isInteraction: false,
}).start();
};

useEffect(() => {
startAnimation();
}, []);

const [next, setNext] = useState(0);
const [lastLeft, setLastLeft] = useState(6);
const [lastTop, setLastTop] = useState(94.07691955566406);
const [lastWidth, setLastWidth] = useState(376);
const [lastHeight, setLastHeight] = useState(80.30770874023438);
const [left, setLeft] = useState(6);
const [top, setTop] = useState(94);
const [width, setWidth] = useState(376);
const [height, setHeight] = useState(80);

useEffect(() => {
if (next === 1) {
setTop(166);
setHeight(308);
}
if (next === 2) {
setTop(479);
setHeight(48);
}
startAnimation(); // 每次 next 变化时重新启动动画
}, [next]);

const handlePress = () => {
setNext((n) => n + 1);
};

console.log("lastLeft: ", lastLeft, "Math.floor(left): ", Math.floor(left));
console.log("lastTop: ", lastTop, "Math.floor(top): ", Math.floor(top));
console.log("lastWidth: ", lastWidth, "Math.floor(width): ", Math.floor(width));
console.log("lastHeight: ", lastHeight, "Math.floor(height): ", Math.floor(height));

return (
<View style={{ position: "relative", height: "100%", width: "100%", backgroundColor: "yellow" }}>
<Svg height="80%" width="100%">
<Defs>
<Mask id="mask" x="0" y="0" height="100%" width="100%" maskUnits="userSpaceOnUse">
<Rect height="100%" width="100%" fill="#fff" />
<AnimatedRect
x={sizeAnim.interpolate({
inputRange: [0, 50],
outputRange: [lastLeft, Math.floor(left)],
})}
y={sizeAnim.interpolate({
inputRange: [0, 50],
outputRange: [lastTop, Math.floor(top)],
})}
width={sizeAnim.interpolate({
inputRange: [0, 50],
outputRange: [lastWidth, Math.floor(width)],
})}
height={sizeAnim.interpolate({
inputRange: [0, 50],
outputRange: [lastHeight, Math.floor(height)],
})}
fill="black"
rx="12"
ry="12"
/>
</Mask>
</Defs>
<Rect height="100%" width="100%" fill="rgba(0, 0, 0, 0.7)" mask="url(#mask)" />
<Rect x={left} y={top} width={width} height={height} fill="transparent" />
</Svg>
<Button 
// style={{
// position: "absolute",
// zIndex: 9999,
// top: 400,
// left: 100,
// width: 30,
// height: 20,
// backgroundColor: "red",
// }}
title={"点击我"} onPress={handlePress} />
</View>
);
};

export default App;
