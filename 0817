  public async runJSBundle(jsBundleProvider: JSBundleProvider, info?:string | null) {
    const stopTracing = this.logger.clone("runJSBundle").startTracing()
    const bundleURL = jsBundleProvider.getURL()
    const isMetroServer = jsBundleProvider.getHotReloadConfig() !== null
    try {
      if(info === undefined) {
        this.devToolsController.eventEmitter.emit("SHOW_DEV_LOADING_VIEW", this.id,
          `Loading from ${jsBundleProvider.getHumanFriendlyURL()}...`)
      }else if(info) {
        this.devToolsController.eventEmitter.emit("SHOW_DEV_LOADING_VIEW", this.id,
          `${info.slice(0, 255)}`)
      }

demo1  路由切换键盘未杀死问题
import * as React from 'react';
import {Button, Text, TextInput, View} from 'react-native';
import {NavigationContainer} from '@react-navigation/native';
import {createStackNavigator} from '@react-navigation/stack';

const HomeStack = createStackNavigator();

function HomeScreen({navigation}) {
  return (
    <View
      style={{
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: 'yellow',
      }}>
      <TextInput
        style={{
          height: 40,
          width: 280,
          borderColor: 'gray',
          borderWidth: 1,
          marginTop: 50,
        }}
      />
      <Text>Home screen</Text>
      <Button
        title="Go to Details"
        onPress={() => navigation.navigate('Details')}
      />
    </View>
  );
}

function DetailsScreen({navigation}) {
  return (
    <View
      style={{
        flex: 1,
        // justifyContent: 'center',
        // alignItems: 'center',
        backgroundColor: 'red',
      }}>
      <Text>Details!</Text>
      <TextInput
        style={{
          height: 40,
          width: 280,
          borderColor: 'gray',
          borderWidth: 1,
          marginTop: 50,
        }}
      />
      <Button
        title="Go to Details2"
        onPress={() => navigation.navigate('Details2')}
      />

      <Button title="Go back" onPress={() => navigation.goBack()} />
    </View>
  );
}

function Details2Screen({navigation}) {
  return (
    <View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>
      <Text>Details2!</Text>
      <Button title="Go back" onPress={() => navigation.goBack()} />
    </View>
  );
}
